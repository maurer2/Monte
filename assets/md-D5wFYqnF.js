import{o as a,c as r,k as n,q as i,s as c,B as l,e,aa as t}from"./modules/vue-Dxc2MuZf.js";import{_ as d}from"./slidev/image-right.vue_vue_type_script_setup_true_lang-CI6i_mHx.js";import{u as p,f as u}from"./slidev/context-BmND0EvN.js";import"./index-2pPdbWY-.js";import"./modules/shiki-BSihjmjQ.js";const m=e("h3",null,"Generating TypeScript types from Zod schemas",-1),_=e("p",null,[t("TypeScript types can be generated from Zod schemas via helpers like "),e("code",null,"z.infer<T>"),t(". As Zod schemas support detailed constraints and error messages compared to TypeScript, those additional data will be lost when generating TypeScript types.")],-1),f=e("p",null,"Some examples for constraints, that will be lost:",-1),h=e("ul",null,[e("li",null,[e("code",null,"integer"),t(" and "),e("code",null,"float"),t(" will just become "),e("code",null,"number")]),e("li",null,[t("string formats like "),e("code",null,"email"),t(", "),e("code",null,"url"),t(" or "),e("code",null,"uuid"),t(" will just become "),e("code",null,"string")]),e("li",null,[e("code",null,"array"),t(" with specific length will just become "),e("code",null,"array")])],-1),z={__name:"zod-and-typescript.md__slidev_15",setup(g){const{$slidev:y,$nav:w,$clicksContext:o,$clicks:x,$page:$,$renderContext:b,$frontmatter:s}=p();return o.setup(),(k,T)=>(a(),r(d,i(c(l(u)(l(s),14))),{default:n(()=>[m,_,f,h]),_:1},16))}};export{z as default};
