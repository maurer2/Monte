import{d as a,z as d,o as e,b as t,g as l}from"../modules/vue-Dxc2MuZf.js";import{u as p}from"./context-BmND0EvN.js";const _={key:0},c={key:1},u={key:2},r={key:3},h={key:4},y={key:5},v={key:6},m={key:7},k={key:8},f={key:9},g={key:10},w={key:11},C={key:12},V={key:13},Z={key:14},T={key:15},B={key:16},S={key:17},b={key:18},x={key:19},G=a({__name:"title-renderer",props:{no:{}},setup(s){const i=s,{$page:n}=p(),o=d(()=>+(i.no??n.value));return(j,z)=>(e(),t("div",null,[o.value===1?(e(),t("p",_,"Zod in frontend projects")):o.value===2?(e(),t("p",c,"Table of Contents")):o.value===3?(e(),t("p",u,"Features")):o.value===4?(e(),t("p",r,"Use Cases")):o.value===5?(e(),t("p",h,"Benefits of form validation with Zod")):o.value===6?(e(),t("p",y,"Validation")):o.value===7?(e(),t("p",v,"Built-in validators")):o.value===8?(e(),t("p",m,"Validate single fields with single types")):o.value===9?(e(),t("p",k,"Validate single fields with custom validation logic")):o.value===10?(e(),t("p",f,"Validate single fields with multiple types")):o.value===11?(e(),t("p",g,"Validate related fields with custom validation logic")):o.value===12?(e(),t("p",w,"Validate multiple object shapes with common field, e.g. discriminated unions")):o.value===13?(e(),t("p",C,"Common pain points")):o.value===14?(e(),t("p",V,"Zod and TypeScript")):o.value===15?(e(),t("p",Z,"Generating TypeScript types from Zod schemas")):o.value===16?(e(),t("p",T,"Comparison of a Zod schema and the generated TypeScript type")):o.value===17?(e(),t("p",B,"When to use what")):o.value===18?(e(),t("p",S,"Type assignment/narrowing via Zod 1")):o.value===19?(e(),t("p",b,"Type assignment/narrowing via Zod 2")):o.value===20?(e(),t("p",x,"undefined")):l("",!0)]))}});export{G as _};
